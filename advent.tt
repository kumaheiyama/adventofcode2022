<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ import namespace="System.IO" #>
<#@ output extenssion=".cs" #>
<#
var day = <number of day>;
#>
internal class Advent<#= day #>
{
    internal async static Task Run()
    {
        var fileContent = await File.ReadAllLinesAsync("input<#= day#>.txt");

        int score1 = 0, score2 = 0;
        for (int i = 0; i < fileContent.Length; i++)
        {
            var line = fileContent[i];
        }

        Console.WriteLine($"Advent<#= day #>: 1 ({score1}), 2 ({score2})");
    }
}
<#
    SaveOutput("Advent" + day + ".cs", day);
#>
<#+
private void SaveOutput(string filename, int day) {
    string templateDirectory = Path.GetDirectoryName(Host.TemplateFile);
    string outputFilePath = Path.Combine(templateDirectory, filename);
    if (!File.Exists(outputFilePath)) {
        File.WriteAllText(outputFilePath, this.GenerationEnvironment.ToString()); 
        this.GenerationEnvironment.Remove(0, this.GenerationEnvironment.Length);
    }
    string outputFilePath2 = Path.Combine(templateDirectory, $"input{day}.txt");
    if (!File.Exists(outputFilePath2)) {
        File.WriteAllText(outputFilePath2, "");
    }
}
#>